name: CI Build & Test
# Triggers the workflow on push or pull request events
on: [push, pull_request]
permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        include:
          # macOS builds
          # ~~~~~~~~~~~~
          - name: macOS-13/Xcode/Debug
            build_type: Debug
            generator: Xcode
            options:
            os: macos-13

          - name: macOS-13/Xcode/Release
            build_type: Release
            generator: Xcode
            options:
            os: macos-13

          # Linux builds
          # ~~~~~~~~~~~~
          - name: Ubuntu-20.04/clang-15/Debug/C++17
            apt_install: clang-15 cmake libc++-15-dev libc++abi-15-dev ninja-build
            build_type: Debug
            cxx_compiler: -DCMAKE_CXX_COMPILER=clang++-15 -DCMAKE_C_COMPILER=clang-15
            generator: Ninja
            options: -DURI_CXX17=Yes -DURI_LIBCXX=Yes -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
            os: ubuntu-22.04

          - name: Ubuntu-22.04/gcc-11/Debug
            apt_install: cmake ninja-build
            build_type: Debug
            generator: Ninja
            options:
            os: ubuntu-22.04

          - name: Ubuntu-22.04/gcc-11/Release
            apt_install: cmake ninja-build
            build_type: Release
            generator: Ninja
            options:
            os: ubuntu-22.04

          - name: Ubuntu-22.04/clang-15/Debug
            apt_install: clang-15 cmake libc++-15-dev libc++abi-15-dev ninja-build
            build_type: Debug
            cxx_compiler: -DCMAKE_CXX_COMPILER=clang++-15 -DCMAKE_C_COMPILER=clang-15
            generator: Ninja
            options: -DURI_LIBCXX=Yes -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
            os: ubuntu-22.04

          - name: Ubuntu-22.04/clang-15/Release
            apt_install: clang-15 cmake libc++-15-dev libc++abi-15-dev ninja-build
            build_type: Release
            cxx_compiler: -DCMAKE_CXX_COMPILER=clang++-15 -DCMAKE_C_COMPILER=clang-15
            generator: Ninja
            options: -DURI_LIBCXX=Yes -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
            os: ubuntu-22.04

          - name: Ubuntu-22.04/clang-15/Release/C++17
            apt_install: clang-15 cmake libc++-15-dev libc++abi-15-dev ninja-build
            build_type: Release
            cxx_compiler: -DCMAKE_CXX_COMPILER=clang++-15 -DCMAKE_C_COMPILER=clang-15
            generator: Ninja
            options: -DURI_CXX17=Yes -DURI_LIBCXX=Yes -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
            os: ubuntu-22.04

          # Windows builds
          # ~~~~~~~~~~~~~~
          - name: Windows-latest/VS2022/Debug
            build_type: Debug
            generator: Visual Studio 17 2022
            options:
            os: windows-latest

          - name: Windows-latest/VS2022/Release
            build_type: Release
            generator: Visual Studio 17 2022
            options:
            os: windows-latest

          - name: Windows-latest/VS2022/Debug/C++17
            build_type: Debug
            generator: Visual Studio 17 2022
            options: -D URI_CXX17=Yes
            os: windows-latest

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          submodules: 'True'

      - name: Install Dependencies (Linux)
        if: startsWith (matrix.os, 'ubuntu-') && matrix.apt_install != ''
        run: sudo apt-get update && sudo apt-get install -y ${{ matrix.apt_install }}

      - name: Create Build Environment
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        shell: bash
        run: |
          cmake -S "$GITHUB_WORKSPACE"                       \
                -B "${{ github.workspace }}/build"           \
                -G "${{ matrix.generator }}"                 \
                -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -D URI_WERROR=Yes                            \
                ${{ matrix.cxx_compiler }}                   \
                ${{ matrix.options }}

      - name: Build
        shell: bash
        run: cmake --build "${{ github.workspace }}/build" --config ${{ matrix.build_type }}
